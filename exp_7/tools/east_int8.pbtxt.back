node {
  name: "input_images"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "input_images"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 3
    }
  }
}
node {
  name: "sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 123.680000305
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "split"
  input: "sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 116.779998779
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "split:1"
  input: "sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 103.940002441
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "split:2"
  input: "sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "sub"
  input: "sub_1"
  input: "sub_2"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/Pad"
  op: "Pad"
  input: "concat"
  input: "resnet_v1_50/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/Pad"
  input: "resnet_v1_50/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 325.687316895
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 0.840725541115
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/conv1/Conv2D"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/pool1/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 273.713500977
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.90533161163
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 365.901000977
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.90533161163
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 606.016845703
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.70458316803
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 504.296569824
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.84055995941
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1027.58581543
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 5.73583841324
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1053.48803711
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.51875972748
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 944.329040527
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 12.1253604889
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1516.55212402
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 5.26359510422
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1809.42663574
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.74663066864
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 729.967285156
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.1573767662
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 776.753417969
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.47976398468
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 839.592468262
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.47976398468
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 989.876586914
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.8221540451
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 682.95300293
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 12.7710351944
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1438.2935791
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.42665338516
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1566.61242676
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 10.0647621155
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1050.46643066
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 10.082698822
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1116.328125
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.37349176407
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 769.803405762
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 11.3486471176
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1045.12670898
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.25819301605
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 880.738647461
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.46449041367
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 2120.79223633
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.18800354004
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1302.69580078
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 6.97718715668
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1263.37646484
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.07805347443
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1224.33898926
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.07805347443
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1932.97583008
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.61299991608
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 913.741271973
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 12.3938751221
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1058.61682129
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 3.83154249191
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1293.00646973
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.50038337708
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1264.55493164
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 11.2634038925
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1122.22546387
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.30620527267
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1546.39172363
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 10.2284612656
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1439.9230957
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 10.3676538467
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1198.15405273
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.69053077698
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1649.08032227
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 10.9893417358
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1403.48327637
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 9.23586463928
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1062.83630371
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.72800922394
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1794.93713379
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 9.05085372925
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1356.94665527
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 9.52394485474
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1251.90783691
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.43019533157
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Pad"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 863.12322998
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 9.09474563599
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1322.80407715
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 6.6921377182
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 2299.53955078
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.58438873291
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1248.22583008
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.58438873291
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1783.10388184
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 9.09475421906
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1709.85449219
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.18053531647
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1528.75427246
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 2.54308223724
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1595.45947266
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 11.7012014389
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1926.27319336
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.59914445877
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1890.48571777
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 1.72429084778
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1403.65893555
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 8.73936080933
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Int8Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 2044.16210938
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.06240701675
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Shape"
  op: "Shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice"
  op: "StridedSlice"
  input: "feature_fusion/Shape"
  input: "feature_fusion/strided_slice/stack"
  input: "feature_fusion/strided_slice/stack_1"
  input: "feature_fusion/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul"
  op: "Mul"
  input: "feature_fusion/strided_slice"
  input: "feature_fusion/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Shape_1"
  op: "Shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_1"
  op: "StridedSlice"
  input: "feature_fusion/Shape_1"
  input: "feature_fusion/strided_slice_1/stack"
  input: "feature_fusion/strided_slice_1/stack_1"
  input: "feature_fusion/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_1"
  op: "Mul"
  input: "feature_fusion/strided_slice_1"
  input: "feature_fusion/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear/size"
  op: "Pack"
  input: "feature_fusion/mul"
  input: "feature_fusion/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear"
  op: "ResizeBilinear"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  input: "feature_fusion/ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat"
  op: "ConcatV2"
  input: "feature_fusion/ResizeBilinear"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "feature_fusion/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2560
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/Conv2D"
  op: "Int8Conv2D"
  input: "feature_fusion/concat"
  input: "feature_fusion/Conv/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1365.09667969
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 1.44352591038
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv/Conv2D"
  input: "feature_fusion/Conv/BatchNorm/gamma/read"
  input: "feature_fusion/Conv/BatchNorm/beta/read"
  input: "feature_fusion/Conv/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv/Relu"
  op: "Relu"
  input: "feature_fusion/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/Conv2D"
  op: "Int8Conv2D"
  input: "feature_fusion/Conv/Relu"
  input: "feature_fusion/Conv_1/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1326.27880859
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 5.03648138046
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_1/Conv2D"
  input: "feature_fusion/Conv_1/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_1/BatchNorm/beta/read"
  input: "feature_fusion/Conv_1/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_1/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Shape_2"
  op: "Shape"
  input: "feature_fusion/Conv_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_2"
  op: "StridedSlice"
  input: "feature_fusion/Shape_2"
  input: "feature_fusion/strided_slice_2/stack"
  input: "feature_fusion/strided_slice_2/stack_1"
  input: "feature_fusion/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_2"
  op: "Mul"
  input: "feature_fusion/strided_slice_2"
  input: "feature_fusion/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Shape_3"
  op: "Shape"
  input: "feature_fusion/Conv_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_3"
  op: "StridedSlice"
  input: "feature_fusion/Shape_3"
  input: "feature_fusion/strided_slice_3/stack"
  input: "feature_fusion/strided_slice_3/stack_1"
  input: "feature_fusion/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_3"
  op: "Mul"
  input: "feature_fusion/strided_slice_3"
  input: "feature_fusion/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_1/size"
  op: "Pack"
  input: "feature_fusion/mul_2"
  input: "feature_fusion/mul_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_1"
  op: "ResizeBilinear"
  input: "feature_fusion/Conv_1/Relu"
  input: "feature_fusion/ResizeBilinear_1/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat_1"
  op: "ConcatV2"
  input: "feature_fusion/ResizeBilinear_1"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "feature_fusion/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/Conv2D"
  op: "Int8Conv2D"
  input: "feature_fusion/concat_1"
  input: "feature_fusion/Conv_2/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 674.542602539
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 5.15151691437
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_2/Conv2D"
  input: "feature_fusion/Conv_2/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_2/BatchNorm/beta/read"
  input: "feature_fusion/Conv_2/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_2/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/Conv2D"
  op: "Int8Conv2D"
  input: "feature_fusion/Conv_2/Relu"
  input: "feature_fusion/Conv_3/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 1361.14501953
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 7.42734622955
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_3/Conv2D"
  input: "feature_fusion/Conv_3/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_3/BatchNorm/beta/read"
  input: "feature_fusion/Conv_3/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_3/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Shape_4"
  op: "Shape"
  input: "feature_fusion/Conv_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_4"
  op: "StridedSlice"
  input: "feature_fusion/Shape_4"
  input: "feature_fusion/strided_slice_4/stack"
  input: "feature_fusion/strided_slice_4/stack_1"
  input: "feature_fusion/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_4"
  op: "Mul"
  input: "feature_fusion/strided_slice_4"
  input: "feature_fusion/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Shape_5"
  op: "Shape"
  input: "feature_fusion/Conv_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "feature_fusion/strided_slice_5"
  op: "StridedSlice"
  input: "feature_fusion/Shape_5"
  input: "feature_fusion/strided_slice_5/stack"
  input: "feature_fusion/strided_slice_5/stack_1"
  input: "feature_fusion/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "feature_fusion/mul_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "feature_fusion/mul_5"
  op: "Mul"
  input: "feature_fusion/strided_slice_5"
  input: "feature_fusion/mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_2/size"
  op: "Pack"
  input: "feature_fusion/mul_4"
  input: "feature_fusion/mul_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "feature_fusion/ResizeBilinear_2"
  op: "ResizeBilinear"
  input: "feature_fusion/Conv_3/Relu"
  input: "feature_fusion/ResizeBilinear_2/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
  attr {
    key: "half_pixel_centers"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat_2"
  op: "ConcatV2"
  input: "feature_fusion/ResizeBilinear_2"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "feature_fusion/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/Conv2D"
  op: "Int8Conv2D"
  input: "feature_fusion/concat_2"
  input: "feature_fusion/Conv_4/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 510.381256104
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 5.59897947311
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_4/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_4/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_4/Conv2D"
  input: "feature_fusion/Conv_4/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_4/BatchNorm/beta/read"
  input: "feature_fusion/Conv_4/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_4/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_4/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_4/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/Conv2D"
  op: "Int8Conv2D"
  input: "feature_fusion/Conv_4/Relu"
  input: "feature_fusion/Conv_5/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 779.344482422
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 6.54527616501
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_5/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_5/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_5/Conv2D"
  input: "feature_fusion/Conv_5/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_5/BatchNorm/beta/read"
  input: "feature_fusion/Conv_5/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_5/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_5/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_5/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/Conv2D"
  op: "Int8Conv2D"
  input: "feature_fusion/Conv_5/Relu"
  input: "feature_fusion/Conv_6/weights/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 862.843688965
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 5.83490276337
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/gamma/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/beta/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_6/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_6/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "feature_fusion/Conv_6/Conv2D"
  input: "feature_fusion/Conv_6/BatchNorm/gamma/read"
  input: "feature_fusion/Conv_6/BatchNorm/beta/read"
  input: "feature_fusion/Conv_6/BatchNorm/moving_mean/read"
  input: "feature_fusion/Conv_6/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.00099996416e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "feature_fusion/Conv_6/Relu"
  op: "Relu"
  input: "feature_fusion/Conv_6/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_7/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: -0.572527468204
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/biases/read"
  op: "Identity"
  input: "feature_fusion/Conv_7/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_7/biases"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/BiasAdd"
  op: "Int8Conv2DBias"
  input: "feature_fusion/Conv_6/Relu"
  input: "feature_fusion/Conv_7/weights/read"
  input: "feature_fusion/Conv_7/biases/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 117.266838074
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.30146312714
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_7/Sigmoid"
  op: "Sigmoid"
  input: "feature_fusion/Conv_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_8/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/biases/read"
  op: "Identity"
  input: "feature_fusion/Conv_8/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_8/biases"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/BiasAdd"
  op: "Int8Conv2DBias"
  input: "feature_fusion/Conv_6/Relu"
  input: "feature_fusion/Conv_8/weights/read"
  input: "feature_fusion/Conv_8/biases/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 279.734405518
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.30146312714
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_8/Sigmoid"
  op: "Sigmoid"
  input: "feature_fusion/Conv_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/mul_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 512.0
      }
    }
  }
}
node {
  name: "feature_fusion/mul_6"
  op: "Mul"
  input: "feature_fusion/Conv_8/Sigmoid"
  input: "feature_fusion/mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT8
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/weights/read"
  op: "Identity"
  input: "feature_fusion/Conv_9/weights"
  attr {
    key: "T"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/weights"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: -9.2042653705e-05
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/biases/read"
  op: "Identity"
  input: "feature_fusion/Conv_9/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@feature_fusion/Conv_9/biases"
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/BiasAdd"
  op: "Int8Conv2DBias"
  input: "feature_fusion/Conv_6/Relu"
  input: "feature_fusion/Conv_9/weights/read"
  input: "feature_fusion/Conv_9/biases/read"
  attr {
    key: "FilterT"
    value {
      type: DT_INT8
    }
  }
  attr {
    key: "InT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "OutT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "filter_scale"
    value {
      f: 328.851043701
    }
  }
  attr {
    key: "input_scale"
    value {
      f: 4.30146312714
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "paddings"
    value {
      list {
        i: 0
        i: 0
        i: 0
        i: 0
      }
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "feature_fusion/Conv_9/Sigmoid"
  op: "Sigmoid"
  input: "feature_fusion/Conv_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "feature_fusion/sub"
  op: "Sub"
  input: "feature_fusion/Conv_9/Sigmoid"
  input: "feature_fusion/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/mul_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.14159274101
      }
    }
  }
}
node {
  name: "feature_fusion/mul_7"
  op: "Mul"
  input: "feature_fusion/sub"
  input: "feature_fusion/mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/div/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "feature_fusion/div"
  op: "RealDiv"
  input: "feature_fusion/mul_7"
  input: "feature_fusion/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "feature_fusion/concat_3/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "feature_fusion/concat_3"
  op: "ConcatV2"
  input: "feature_fusion/mul_6"
  input: "feature_fusion/div"
  input: "feature_fusion/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
library {
}
versions {
}
